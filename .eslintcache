[{"C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\index.js":"1","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\reportWebVitals.js":"2","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\App.js":"3","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\main\\index.js":"4","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\config\\constants.js":"5","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\product\\index.js":"6","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\upload\\index.js":"7"},{"size":591,"mtime":1666694720193,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1666439966122,"results":"10","hashOfConfig":"9"},{"size":1190,"mtime":1666532532424,"results":"11","hashOfConfig":"9"},{"size":2974,"mtime":1666712951744,"results":"12","hashOfConfig":"9"},{"size":252,"mtime":1666718052834,"results":"13","hashOfConfig":"9"},{"size":2149,"mtime":1666713686488,"results":"14","hashOfConfig":"9"},{"size":3887,"mtime":1666707160178,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11l9fh3",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\index.js",[],["35","36"],"C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\reportWebVitals.js",[],"C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\App.js",["37"],"// 기능 링크\nimport 'antd/dist/antd.css';\nimport {Switch, Route, Link, useHistory} from 'react-router-dom';\nimport {Button} from \"antd\";\nimport {DownloadOutlined} from \"@ant-design/icons\";\n// CSS링크\nimport './App.css';\n// 페이지 링크\nimport MainPageComponent from './main/index.js';\nimport UploadPage from './upload';\nimport ProductPage from './product';\n\n\nfunction App() {\n  const history = useHistory();\n  return (\n  <div>\n    <div id=\"header\">\n      <div id=\"header-area\">\n        <Link to={`/`}>\n          <img src=\"/images/icons/logo.png\"/>\n        </Link>\n        <Button\n          size = \"large\"\n          onClick = {function(){\n            history.push('/upload');\n          }}\n          icon = {<DownloadOutlined/>}\n         >\n          상품 업로드\n        </Button>\n      </div>\n    </div>\n    <div id=\"body\">\n    <Switch>\n      <Route exact={true} path={\"/\"}>\n        <MainPageComponent/>\n      </Route>\n      <Route exact={true} path={\"/products/:id\"}>\n        <ProductPage/>\n      </Route>\n      <Route exact={true} path={\"/upload\"}>\n        <UploadPage/>\n      </Route>\n    </Switch>\n    </div>\n    <div id=\"footer\"></div>\n  </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\main\\index.js",["38","39","40"],"import React from 'react';\r\nimport './index.css';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport dayjs from 'dayjs';\r\nimport {API_URL} from \"../config/constants.js\"\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport {Carousel} from 'antd';\r\n\r\ndayjs.extend(relativeTime);\r\n\r\n// 메인페이지 실행시 상품 및 배너의 정보를 가져오는 함수\r\nfunction MainPage() {\r\n  const [products, setProducts] = React.useState([]);\r\n  const [banners, setBanners] = React.useState([]);\r\n  React.useEffect(function(){\r\n    axios.get(`${API_URL}/products`)\r\n    .then(function(result){\r\n      console.log(result);\r\n      const products = result.data.products;\r\n      setProducts(products);\r\n    }).catch(function(error){\r\n      console.log(error);\r\n    });\r\n\r\n    axios.get(`${API_URL}/banners`).then((result)=>{\r\n      const banners = result.data.banners;\r\n      setBanners(banners);\r\n      console.log(\"banners : \",banners);\r\n    }).catch((error)=>{\r\n      console.log(\"에러 발생 : \", error);\r\n    })\r\n  }, [])\r\n  return(\r\n    <div>\r\n        <Carousel autoplay={true} autoplaySpeed={3000}>\r\n          {banners.map((banner, index)=>{\r\n              return (\r\n                <Link to={banner.href}>\r\n                <div id=\"banner\">\r\n                  <img src={`${API_URL}/${banner.imageUrl}`}/>\r\n                </div>\r\n                </Link>\r\n              );\r\n            })\r\n          }\r\n        </Carousel>\r\n        <h1 id=\"product-headline\">판매되는 상품들</h1>\r\n        <div id=\"product-list\">\r\n          {products.map(function(product, index){\r\n              return(\r\n              <div className=\"product-card\">\r\n                {\r\n                  product.soldout === 1 && <div className='product-blur'/>\r\n                }\r\n                <Link style={{color:'inherit'}} className=\"product-link\" to={`/products/${product.id}`}>\r\n                <div>\r\n                  <img className=\"product-img\" src={`${API_URL}/${product.imageUrl}`}/>\r\n                </div>\r\n                <div className=\"product-contents\">\r\n                  <span className='product-name'>\r\n                    {product.name}\r\n                  </span>\r\n                  <span className='product-price'>\r\n                    {product.price}원\r\n                  </span>\r\n                  <div className='product-footer'>\r\n                    <div className='product-seller'>\r\n                      <img className='product-avatar' src=\"/images/icons/avatar.png\"/>\r\n                      <span>{product.seller}</span>\r\n                    </div>\r\n                    {/* dayjs와 dayjs.relatice를 통해서 날짜를 정리 */}\r\n                    <span className='product-date'>{dayjs(product.createdAt).fromNow}</span>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\config\\constants.js",[],"C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\product\\index.js",["41","42","43"],"import {useParams} from \"react-router-dom\";\r\nimport './index.css';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {API_URL} from \"../config/constants.js\"\r\nimport dayjs from \"dayjs\";\r\nimport {Button, message} from \"antd\";\r\n\r\nfunction ProductPage(){\r\n  const {id} = useParams();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  // 상품정보 가져오기\r\n  const getProduct = () => {\r\n    axios\r\n      .get(`${API_URL}/products/${id}`)\r\n      .then(function(result){\r\n        console.log(result);\r\n        console.log(result.data);\r\n        console.log(result.data.product);\r\n        setProduct(result.data.product);\r\n      })\r\n      .catch(function(error){\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // 상품정보 읽기\r\n  useEffect(function(){\r\n    console.log(id);\r\n    getProduct();\r\n  },[])\r\n\r\n  // 읽는 동안 대기 화면\r\n  if(product === null) {\r\n    return <h1>상품 정보를 불러오고 있습니다...</h1>\r\n  }\r\n\r\n  //구매 함수\r\n  const onClickPurchase = () => {\r\n    axios.post(`${API_URL}/purchase/${id}`)\r\n    .then((result)=>{\r\n      message.info('구매가 완료되었습니다.');\r\n      getProduct();\r\n    }).catch((error)=>{\r\n      console.error(error);\r\n      message.error(`에러가 발생했습니다. ${error.message}`);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"image-box\">\r\n        <img src={`${API_URL}/${product.imageUrl}`}/>\r\n      </div>\r\n      <div id=\"profile-box\">\r\n        <img src=\"/images/icons/avatar.png\"/>\r\n        <span>{product.seller}</span>\r\n      </div>\r\n      <div id=\"contents-box\">\r\n        <div id=\"name\">{product.name}</div>\r\n        <div id=\"price\">{product.price}</div>\r\n        <div id=\"createdAt\">{dayjs(product.createdAt).format('YYYY년 MM월 DD일')}</div>\r\n        <Button size=\"large\" type=\"primary\" danger={true} id=\"purchase-button\" onClick={onClickPurchase} disabled={product.soldout === 1}>\r\n          구매하기\r\n        </Button>\r\n        {/* 줄바꿈을 구현해 주는 태그 */}\r\n        <pre id=\"description\">{product.description}</pre>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductPage;","C:\\Users\\JS\\Desktop\\Inflearn_study\\grab-market\\grab-market-web\\src\\upload\\index.js",["44","45"],"import {Button, Divider, Form, Input, InputNumber, Upload, message} from 'antd';\r\nimport { useState } from 'react';\r\nimport './index.css';\r\nimport {API_URL} from \"../config/constants.js\"\r\nimport axios from 'axios';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction UploadPage(){\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const history = useHistory();\r\n  const onSubmit = (values) => {\r\n    console.log(\"onSubmit values: \", values);\r\n    axios\r\n      .post(`${API_URL}/products`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        seller: values.seller,\r\n        price: parseInt(values.price),\r\n        imageUrl: imageUrl,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        history.replace('/');\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        message.error(`에러가 발생했습니다. ${error.message}`)\r\n      });\r\n  };\r\n  const onChangeImage = (info) => {\r\n    if(info.file.status === 'uploading'){\r\n      return;\r\n    }\r\n    if(info.file.status === 'done'){\r\n      const response = info.file.response;\r\n      console.log('response.imageUrl',response.imageUrl);\r\n      const imageUrl = response.imageUrl;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  }\r\n  return (\r\n    <dvi id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Form.Item \r\n          name=\"upload\"\r\n          label={<div className='upload-label'>상품사진</div>}\r\n          // rules={[{required:true, message:\"상품사진을 등록해주세요.\"}]}\r\n        >\r\n          <Upload name='image'\r\n                  action={`${API_URL}/image`}\r\n                  listType='picture'\r\n                  showUploadList={false}\r\n                  onChange={onChangeImage}\r\n                  >\r\n                    {imageUrl ? (\r\n                      <img id='upload-img' src={`${API_URL}/${imageUrl}`}/>\r\n                      ) : (\r\n                      <div id=\"upload-img-placeholder\">\r\n                        <img src=\"/images/icons/camera.png\" />\r\n                        <span>이미지를 업로드해주세요.</span>\r\n                      </div>\r\n                    )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"seller\"\r\n          label={<div className='upload-label'>판매자명</div>}\r\n          rules={[{required:true, message:\"판매자 이름을 입력해주세요.\"}]}\r\n        >\r\n          <Input className=\"upload-name\" size=\"large\" placeholder=\"이름을 입력해주세요.\"/>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={<div className='upload-label'>상품이름</div>}\r\n          rules={[{required:true, message:\"상품이름을 입력해주세요.\"}]}\r\n        >\r\n           <Input className=\"upload-name\" size=\"large\" placeholder=\"상품 이름을 입력해주세요.\"/>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className='upload-label'>가격</div>}\r\n          rules={[{required:true, message:\"가격을 입력해주세요.\"}]}\r\n        >\r\n           <InputNumber className=\"upload-price\" size=\"large\" defaultValue={0}/>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className='upload-label'>상품소개</div>}\r\n          rules={[{required:true, message:\"상품소개를 입력해주세요.\"}]}\r\n        >\r\n           <Input.TextArea size='large' id='product-description' showCount maxLength={300} placeholder=\"상품소개를 입력해주세요.\"/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size='large' htmlType='submit'>\r\n            등록하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </dvi>\r\n  );\r\n}\r\n\r\nexport default UploadPage;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":21,"column":11,"nodeType":"52","endLine":21,"endColumn":46},{"ruleId":"50","severity":1,"message":"51","line":41,"column":19,"nodeType":"52","endLine":41,"endColumn":63},{"ruleId":"50","severity":1,"message":"51","line":58,"column":19,"nodeType":"52","endLine":58,"endColumn":88},{"ruleId":"50","severity":1,"message":"51","line":69,"column":23,"nodeType":"52","endLine":69,"endColumn":87},{"ruleId":"53","severity":1,"message":"54","line":32,"column":5,"nodeType":"55","endLine":32,"endColumn":7,"suggestions":"56"},{"ruleId":"50","severity":1,"message":"51","line":54,"column":9,"nodeType":"52","endLine":54,"endColumn":54},{"ruleId":"50","severity":1,"message":"51","line":57,"column":9,"nodeType":"52","endLine":57,"endColumn":46},{"ruleId":"50","severity":1,"message":"51","line":56,"column":23,"nodeType":"52","endLine":56,"endColumn":76},{"ruleId":"50","severity":1,"message":"51","line":59,"column":25,"nodeType":"52","endLine":59,"endColumn":63},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProduct' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [getProduct, id]",{"range":"62","text":"63"},[815,817],"[getProduct, id]"]